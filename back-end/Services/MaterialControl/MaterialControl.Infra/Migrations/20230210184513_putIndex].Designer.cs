// <auto-generated />
using System;
using MaterialControl.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MaterialControl.Infra.Migrations
{
    [DbContext(typeof(MaterialControlContext))]
    [Migration("20230210184513_putIndex]")]
    partial class putIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Commom.Domain.BaseEntities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d692a353-edd4-4078-b412-64c31f716fc6"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "admin",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FunctionIdRole", b =>
                {
                    b.Property<Guid>("FunctionsIdsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uuid");

                    b.HasKey("FunctionsIdsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("FunctionIdRole");

                    b.HasData(
                        new
                        {
                            FunctionsIdsId = new Guid("a3e1214e-f446-4d67-aaaf-789e155076e2"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("14667529-7f21-49cf-afab-5b8c695355c5"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("7140fba0-486c-4215-814d-576e15c055b3"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("fbe9e547-fb6f-4a21-87d3-3d782ba26e6c"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("3d86a26d-0897-487d-8e59-787716504e22"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("e98ccd7d-08b7-49c1-9987-ee2274a2b1f1"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("aa11d20d-ab81-4cc4-a939-d2d48ab48767"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("21438f13-527f-4fbb-9960-4dd697df6550"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("8379b437-f1c4-4834-87ea-abc10917c5db"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("8316564c-3c55-48e1-9a47-9747fbe1daa4"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("aae9049c-9005-416d-9cd7-fc59892659c3"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("9a7be459-e818-4984-adde-19ef06b113a8"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("7328fc29-e3f9-4835-b77d-6f4017dc4d03"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("8c42685d-918b-40e5-8ff7-3aa750ed8948"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("1d3f1215-976a-4689-9fcd-695971e0a431"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        },
                        new
                        {
                            FunctionsIdsId = new Guid("c9e4d021-40b8-4ea5-88ba-0d885ece29ee"),
                            RolesId = new Guid("d692a353-edd4-4078-b412-64c31f716fc6")
                        });
                });

            modelBuilder.Entity("MaterialControl.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("MaterialControl.Domain.Entities.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("UnityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UnityId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("MaterialControl.Domain.Entities.Unity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Unities");
                });

            modelBuilder.Entity("MaterialControl.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MaterialPurchase.Domain.Entities.FunctionId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FunctionsIds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3e1214e-f446-4d67-aaaf-789e155076e2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2001",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("14667529-7f21-49cf-afab-5b8c695355c5"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2002",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7140fba0-486c-4215-814d-576e15c055b3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2003",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fbe9e547-fb6f-4a21-87d3-3d782ba26e6c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2004",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3d86a26d-0897-487d-8e59-787716504e22"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2005",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e98ccd7d-08b7-49c1-9987-ee2274a2b1f1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2006",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("aa11d20d-ab81-4cc4-a939-d2d48ab48767"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2007",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("21438f13-527f-4fbb-9960-4dd697df6550"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2008",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8379b437-f1c4-4834-87ea-abc10917c5db"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2009",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8316564c-3c55-48e1-9a47-9747fbe1daa4"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2010",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("aae9049c-9005-416d-9cd7-fc59892659c3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2011",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9a7be459-e818-4984-adde-19ef06b113a8"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2012",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7328fc29-e3f9-4835-b77d-6f4017dc4d03"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2013",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8c42685d-918b-40e5-8ff7-3aa750ed8948"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2014",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1d3f1215-976a-4689-9fcd-695971e0a431"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2015",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c9e4d021-40b8-4ea5-88ba-0d885ece29ee"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "2999",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FunctionIdRole", b =>
                {
                    b.HasOne("MaterialPurchase.Domain.Entities.FunctionId", null)
                        .WithMany()
                        .HasForeignKey("FunctionsIdsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commom.Domain.BaseEntities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaterialControl.Domain.Entities.Material", b =>
                {
                    b.HasOne("MaterialControl.Domain.Entities.Unity", "Unity")
                        .WithMany()
                        .HasForeignKey("UnityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unity");
                });
#pragma warning restore 612, 618
        }
    }
}
