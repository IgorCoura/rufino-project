version: '3.4'

services:
  api.gateway:
    container_name: api-gateway
    image: envoyproxy/envoy:v1.24.1
    ports:
      - 9901:9901
      - 10000:10000
      - 10001:10001
    volumes:
      - ./ApiGateway/Envoy:/etc/envoy
      - ./ApiGateway/Certificates/https.crt:/etc/ssl/certs/https.crt
      - ./ApiGateway/Certificates/key.pem:/etc/ssl/certs/key.pem

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
        context: .
        dockerfile: Services/Identity/Identity.API/Dockerfile
    environment:
        ASPNETCORE_URLS: "https://+;http://+"
        ASPNETCORE_HTTPS_PORT: "8011"
        ASPNETCORE_ENVIRONMENT: Development
    volumes:
        - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
        - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/
    ports:
        - 8010:80
        - 8011:443
    depends_on:
        - api.gateway
        - identity.db

  identity.db:
    image: postgres:15.1-alpine
    restart: always
    environment:
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "5up3rS3nh@"
    ports:
        - 8012:5432

  materialpurchase.api:
    image: ${DOCKER_REGISTRY-}materialpurchaseapi
    build:
        context: .
        dockerfile: Services/MaterialPurchase/MaterialPurchase.API/Dockerfile
    environment:
        ASPNETCORE_URLS: "https://+;http://+"
        ASPNETCORE_HTTPS_PORT: "8011"
        ASPNETCORE_ENVIRONMENT: Development
    volumes:
        - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
        - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/
    ports:
        - 8020:80
        - 8021:443
    depends_on:
        - api.gateway
        - materialpurchase.db
        - identity.api

  materialpurchase.db:
    image: postgres:15.1-alpine
    restart: always
    environment:
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "5up3rS3nh@"
    ports:
        - 8022:5432



  materialcontrol.api:
    image: ${DOCKER_REGISTRY-}materialcontrolapi
    build:
        context: .
        dockerfile: Services/MaterialControl/MaterialControl.API/Dockerfile
    environment:
        ASPNETCORE_URLS: "https://+;http://+"
        ASPNETCORE_HTTPS_PORT: "8011"
        ASPNETCORE_ENVIRONMENT: Development
    volumes:
        - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
        - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/
    ports:
        - 8030:80
        - 8031:443
    depends_on:
        - api.gateway
        - identity.api


  materialcontrol.db:
    image: postgres:15.1-alpine
    restart: always
    environment:
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "5up3rS3nh@"
    ports:
        - 8032:5432

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  teste.api:
        image: ${DOCKER_REGISTRY-}testeapi
        build:
            context: .
            dockerfile: Services/TesteAPI/Teste.API/Dockerfile
        environment:
            ASPNETCORE_URLS: "https://+;http://+"
            ASPNETCORE_HTTPS_PORT: "8041"
            ASPNETCORE_ENVIRONMENT: Development
        volumes:
            - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
            - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https/
        ports:
            - 8100:80
            - 8101:443
        depends_on:
            - api.gateway
            - identity.api